apiVersion: landscaper.gardener.cloud/v1alpha1
kind: DeployItem
metadata:
  annotations:
    execution.landscaper.gardener.cloud/dependsOn: ""
  creationTimestamp: "2021-02-25T13:09:29Z"
  finalizers:
  - finalizer.landscaper.gardener.cloud
  generateName: echo-server-deploy-
  generation: 1
  labels:
    execution.landscaper.gardener.cloud/managed-by: echo-server
    execution.landscaper.gardener.cloud/name: deploy
  managedFields:
  - apiVersion: landscaper.gardener.cloud/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:execution.landscaper.gardener.cloud/dependsOn: {}
        f:finalizers:
          .: {}
          v:"finalizer.landscaper.gardener.cloud": {}
        f:generateName: {}
        f:labels:
          .: {}
          f:execution.landscaper.gardener.cloud/managed-by: {}
          f:execution.landscaper.gardener.cloud/name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"829f889c-ff3a-4599-886e-2ae41779c838"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        .: {}
        f:config:
          .: {}
          f:apiVersion: {}
          f:chart:
            .: {}
            f:ref: {}
          f:kind: {}
          f:name: {}
          f:namespace: {}
          f:updateStrategy: {}
        f:target:
          .: {}
          f:name: {}
          f:namespace: {}
        f:type: {}
      f:status:
        .: {}
        f:lastError:
          .: {}
          f:lastTransitionTime: {}
          f:lastUpdateTime: {}
          f:message: {}
          f:operation: {}
          f:reason: {}
        f:observedGeneration: {}
        f:phase: {}
    manager: landscaper-controller
    operation: Update
    time: "2021-02-25T13:09:29Z"
  name: echo-server-deploy-k4v5p
  namespace: ls-cli-inttest
  ownerReferences:
  - apiVersion: landscaper.gardener.cloud/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Execution
    name: echo-server
    uid: 829f889c-ff3a-4599-886e-2ae41779c838
  resourceVersion: "50926"
  uid: ba2c7769-72ea-475d-9d77-d83fa9c07b9c
spec:
  config:
    apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
    chart:
      ref: oci-registry.landscaper.svc.cluster.local:5000/echo-server-chart:v1.1.0
    kind: ProviderConfiguration
    name: echo-server
    namespace: ls-cli-inttest
    updateStrategy: patch
  target:
    name: test-target
    namespace: ls-cli-inttest
  type: landscaper.gardener.cloud/helm
status:
  lastError:
    lastTransitionTime: "2021-02-25T13:09:29Z"
    lastUpdateTime: "2021-03-09T14:00:23Z"
    message: 'invalid configuration: [unable to read client-cert /Users/user/.minikube/profiles/minikube/client.crt
      for minikube due to open /Users/user/.minikube/profiles/minikube/client.crt:
      no such file or directory, unable to read client-key /Users/user/.minikube/profiles/minikube/client.key
      for minikube due to open /Users/user/.minikube/profiles/minikube/client.key:
      no such file or directory, unable to read certificate-authority /Users/user/.minikube/ca.crt
      for minikube due to open /Users/user/.minikube/ca.crt: no such file or directory]'
    operation: TemplateChart
    reason: ""
  observedGeneration: 0
  phase: Failed
