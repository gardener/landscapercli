apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Installation
metadata:
  creationTimestamp: "2021-02-25T13:09:28Z"
  finalizers:
  - finalizer.landscaper.gardener.cloud
  generation: 1
  managedFields:
  - apiVersion: landscaper.gardener.cloud/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        .: {}
        f:blueprint:
          .: {}
          f:inline:
            .: {}
            f:filesystem: {}
        f:exports: {}
        f:importDataMappings:
          .: {}
          f:appname: {}
          f:appnamespace: {}
        f:imports:
          .: {}
          f:targets: {}
    manager: __debug_bin
    operation: Update
    time: "2021-02-25T13:09:28Z"
  - apiVersion: landscaper.gardener.cloud/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"finalizer.landscaper.gardener.cloud": {}
      f:status:
        .: {}
        f:conditions: {}
        f:configGeneration: {}
        f:executionRef:
          .: {}
          f:name: {}
          f:namespace: {}
        f:imports: {}
        f:observedGeneration: {}
        f:phase: {}
    manager: landscaper-controller
    operation: Update
    time: "2021-02-25T13:09:29Z"
  name: echo-server
  namespace: ls-cli-inttest
  resourceVersion: "1652"
  uid: 42d73688-8325-455d-829d-d87d4aea7acc
spec:
  blueprint:
    inline:
      filesystem:
        blueprint.yaml: "\n        apiVersion: landscaper.gardener.cloud/v1alpha1\n
          \       kind: Blueprint\n\n        imports:\n        - name: cluster\n          targetType:
          landscaper.gardener.cloud/kubernetes-cluster\n\n        - name: appname\n
          \         schema:\n            type: string\n\n        - name: appnamespace\n
          \         schema:\n            type: string\n\n        deployExecutions:\n
          \       - name: default\n          type: GoTemplate\n          template:
          |\n            deployItems:\n            - name: deploy\n              type:
          landscaper.gardener.cloud/helm\n              target:\n                name:
          {{ .imports.cluster.metadata.name }}\n                namespace: {{ .imports.cluster.metadata.namespace
          }}\n              config:\n                apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1\n
          \               kind: ProviderConfiguration\n\n                chart:\n
          \                 ref: \"oci-registry.landscaper.svc.cluster.local:5000/echo-server-chart:v1.1.0\"\n\n
          \               updateStrategy: patch\n\n                name: {{ .imports.appname
          }}\n                namespace: {{ .imports.appnamespace }}\n    "
  exports: {}
  importDataMappings:
    appname: echo-server
    appnamespace: ls-cli-inttest
  imports:
    targets:
    - name: cluster
      target: '#test-target'
status:
  conditions:
  - lastTransitionTime: "2021-02-25T13:09:29Z"
    lastUpdateTime: "2021-02-25T13:09:29Z"
    message: All imports are satisfied
    reason: ImportsSatisfied
    status: "True"
    type: ValidateImports
  - lastTransitionTime: "2021-02-25T13:09:29Z"
    lastUpdateTime: "2021-02-25T13:09:29Z"
    message: All Installations are successfully installed
    reason: InstallationsInstalled
    status: "True"
    type: EnsureSubInstallations
  - lastTransitionTime: "2021-02-25T13:09:29Z"
    lastUpdateTime: "2021-02-25T13:09:29Z"
    message: Deployed execution item
    reason: ExecutionDeployed
    status: "True"
    type: ReconcileExecution
  configGeneration: ""
  executionRef:
    name: echo-server
    namespace: ls-cli-inttest
  imports:
  - configGeneration: "1"
    name: cluster
    target: '#test-target'
    type: target
  observedGeneration: 1
  phase: Progressing
